{"time":1732739626969,"blocks":[{"id":"o6xdUsU2E7","type":"paragraph","data":{"text":"&nbsp; <br>"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"zK5Dghgoqi","type":"header","data":{"text":"<b>Config.yml</b>","level":1},"tunes":{"AlignmentTune":{"alignment":"center"},"TextVariantTune":""}},{"id":"jX9xRxBtGi","type":"paragraph","data":{"text":"&nbsp; <br>"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"D82T_t-P7a","type":"paragraph","data":{"text":"In this page you can found all aspects of config file in order of appearance."},"tunes":{"AlignmentTune":{"alignment":"center"},"TextVariantTune":""}},{"id":"MyWtWkCZzU","type":"paragraph","data":{"text":"Below there is an index of all possible configuration divided by section.<br>"},"tunes":{"AlignmentTune":{"alignment":"center"},"TextVariantTune":""}},{"id":"GN0ipScTfo","type":"header","data":{"text":"<b>Index</b>","level":2},"tunes":{"AlignmentTune":{"alignment":"center"},"TextVariantTune":""}},{"id":"O3orCFqm3_","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/database","text":"Database Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"6Ux4oyPzYr","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/worlds","text":"Worlds Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"V6EITfShpS","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/interface","text":"Interface Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"nXG_CPDFRB","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/animations","text":"Animations Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"d0E8UdXfic","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/owner","text":"Owner Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"1r7JS_S8yY","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/maxnumbergenerators","text":"Limited Number of Generators Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"Jfv4ByCMFp","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/experience","text":"Experience Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"7X7loPRL_Y","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/itemdamage","text":"Item Damage Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"jf1MEuidpn","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/chestautofill","text":"Autofill Chest Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"VvpYQG3m7B","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/hooks","text":"Hooks Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"KFBjTA5q30","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/prices","text":"Prices Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"9DKx7cy8wC","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/generators","text":"Generators Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"DF6LA04r1O","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/interfaces","text":"Interfaces Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"PlOcFn7zxd","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/messages","text":"Messages Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"GTuXqgpQ8D","type":"navigationBox","data":{"link":"/docs/cubegenerator/config/debug","text":"Debug Configuration"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"inARUHcGsc","type":"delimiter","data":{"style":"line","lineWidth":50,"lineThickness":2},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}},{"id":"GC5R_8mABT","type":"header","data":{"text":"<b>Config File</b>","level":2},"tunes":{"AlignmentTune":{"alignment":"center"},"TextVariantTune":""}},{"id":"-KB2H4u_iv","type":"paragraph","data":{"text":"This is a copy of config.yml file updated at latest version. The plugin have an updating system for this files, but some parts is whitelisted for allow personal customization.<br>"},"tunes":{"AlignmentTune":{"alignment":"center"},"TextVariantTune":""}},{"id":"cKoBY-U3R6","type":"codeBox","data":{"code":"","language":"yaml","theme":"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/atom-one-dark.min.css"},"tunes":{"AlignmentTune":{"alignment":"left"},"TextVariantTune":""}}],"version":"2.30.6"}